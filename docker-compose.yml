version: "2.4"
services:
  vroom:
    network_mode: host
    image: vroomvrp/vroom-docker:v1.11.0
    container_name: vroom
    volumes:
      - ./vroom-conf/:/conf
    environment:
      - VROOM_ROUTER=osrm  # router to use, osrm, valhalla or ors
    depends_on:
      - osrm

  # EXAMPLE for OSRM, please consult the repo for details: https://hub.docker.com/r/osrm/osrm-backend/
  osrm:
    image: osrm/osrm-backend
    container_name: osrm
    restart: always
    ports:
      - 5000:5000
    volumes:
      - ./osrm:/data
    command: "osrm-routed --max-matching-size 1000 --max-table-size 1000 --max-viaroute-size 1000 --algorithm mld /data/map.osrm"

  # EXAMPLE for Valhalla, please consult the repo for details: https://github.com/gis-ops/docker-valhalla
#  valhalla:
#    image: gisops/valhalla:latest
#    container_name: valhalla_latest
#    ports:
#      - 8002:8002
#    build:
#      context: .
#     # in case you need to build image without requiring sudo privileges on the files created by the container, you should provide your user's UID/GID
#      args:
#        - VALHALLA_UID=1000
#        - VALHALLA_GID=1000
#    volumes:
#      - ./custom_files:/custom_files
#    environment:
#      # Auto-download PBFs from Geofabrik
#      - tile_urls=https://download.geofabrik.de/europe/andorra-latest.osm.pbf
#      - server_threads=2  # determines how many threads will be used to run the valhalla server
#      - use_tiles_ignore_pbf=True  # load existing valhalla_tiles.tar directly
#      - build_elevation=True  # build elevation with "True" or "Force": will download only the elevation for areas covered by the graph tiles
#      - build_admins=True  # build admins db with "True" or "Force"
#      - build_time_zones=True  # build timezone db with "True" or "Force"
#      - build_tar=True  # build an indexed tar file from the tile_dir for faster graph loading times
#      - force_rebuild=False  # forces a rebuild of the routing tiles with "True"

  # EXAMPLE for OpenRouteService, please consult the repo for details: https://github.com/GIScience/openrouteservice
#  ors:
#    container_name: ors
#    ports:
#      - 8080:8080
#    image: openrouteservice/openrouteservice:latest
#    volumes:
#      - ./graphs:/ors-core/data/graphs
#      - ./elevation_cache:/ors-core/data/elevation_cache
#      - ./logs/ors:/var/log/ors
#      - ./logs/tomcat:/usr/local/tomcat/logs
#      - ./conf:/ors-conf
#      - ./path/to/pbf:/ors-core/data/osm_file.pbf  # alter path to your local OSM PBF file, e.g. from https://download.geofabrik.de
#    environment:
#      - BUILD_GRAPHS=False  # Forces the container to rebuild the graphs, e.g. when PBF is changed in app.config
#      - "JAVA_OPTS=-Djava.awt.headless=true -server -XX:TargetSurvivorRatio=75 -XX:SurvivorRatio=64 -XX:MaxTenuringThreshold=3 -XX:+UseG1GC -XX:+ScavengeBeforeFullGC -XX:ParallelGCThreads=4 -Xms1g -Xmx2g"
#      - "CATALINA_OPTS=-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=9001 -Dcom.sun.management.jmxremote.rmi.port=9001 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=localhost"
